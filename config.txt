=== ./config/flatland.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, [1.0, 1.0, 1000.0, 1000.0, flatland]},
    {runs, 1},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, false},
    {population_mgr_efficiency, 1},
    {interactive_selection, false},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{op_modes => [gt],
             population_id => flatland_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 20,
             generation_limit => 100,
             evaluations_limit => 25000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => prey,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural],
                       substrate_plasticities => [none],
                       substrate_linkforms => [l2l_feedforward],
                       neural_afs => [tanh],
                       neural_pfns => [hebbian],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                         {mutate_weights, 1},
                         {add_bias,1},
                         {remove_bias,1},
                         {mutate_af,1},
                         {add_outlink,4},
                         {add_inlink,4},
                         {add_neuron,4},
                         {outsplice,4},
                         {add_sensor,1},
                         {add_actuator,1},
                         {add_sensorlink,1},
                         {add_actuatorlink,1},
                         {mutate_plasticity_parameters,4},
                         {add_cpp,1},
                         {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => steady_state,
                       population_fitness_postprocessor_f => size_proportional,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }},
                    #{data => #{ morphology => predator,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural],
                       substrate_plasticities => [none],
                       substrate_linkforms => [l2l_feedforward],
                       neural_afs => [tanh],
                       neural_pfns => [hebbian],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                         {mutate_weights, 1},
                         {add_bias,1},
                         {remove_bias,1},
                         {mutate_af,1},
                         {add_outlink,4},
                         {add_inlink,4},
                         {add_neuron,4},
                         {outsplice,4},
                         {add_sensor,1},
                         {add_actuator,1},
                         {add_sensorlink,1},
                         {add_actuatorlink,1},
                         {mutate_plasticity_parameters,4},
                         {add_cpp,1},
                         {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => steady_state,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }}
    ]}
  ]}

].

=== ./config/dpb_wo_damping.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, []},
    {runs, 50},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, false},
    {population_mgr_efficiency, 1},
    {interactive_selection, false},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{ op_modes => [gt, validation],
             population_id => dpb_benchmark_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 10,
             generation_limit => 100,
             evaluations_limit => 10000,
             fitness_goal => 9000
           }}
    },

    {constraints, [
                    #{data => #{ morphology => dpb_wo_damping,
                       connection_architecture => feedforward,
                       agent_encoding_types => [neural],
                       substrate_plasticities => [none],
                       substrate_linkforms => [l2l_feedforward],
                       neural_afs => [tanh],
                       neural_pfns => [ojas],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                                {mutate_weights,1},
                                {add_bias,1},
                                {remove_bias,1},
                                {mutate_af,1},
                                {add_outlink,4},
                                {add_inlink,4},
                                {add_neuron,4},
                                {outsplice,4},
                                {add_sensor,1},
                                {add_actuator,1},
                                {add_sensorlink,1},
                                {add_actuatorlink,1},
                                {mutate_plasticity_parameters,4},
                                {add_cpp,1},
                                {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => generational,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }
    }]}
  ]}

].

=== ./config/fx_all.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, []},
    {runs, 10},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, true},
    {population_mgr_efficiency, 1},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{ op_modes => [gt, validation],
             population_id => fx_application_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 10,
             generation_limit => 100,
             evaluations_limit => 25000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => fx_morphology,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural, substrate],
                       substrate_plasticities => [none, iterative, abcn],
                       substrate_linkforms => [l2l_feedforward, jordan_recurrent, fully_connected, fully_interconnected, neuronself_recurrent],
                       neural_afs => [tanh, relu, cos, gaussian, absolute, sin, sqrt, sigmoid],
                       neural_pfns => [none, hebbian_w, hebbian, ojas_w, ojas, self_modulation_v1, self_modulation_v2, self_modulation_v2, self_modulation_v3, self_modulation_v4, self_modulation_v5, self_modulation_v6, neuromodulation],
                       neural_aggr_fs => [dot_product, diff_product, mult_product],
                       tuning_selection_fs => [all, all_random, dynamic, dynamic_random, active, active_random, current, current_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian, lamarckian],
                       mutation_operators => [
                                {mutate_weights,1},
                                {add_bias,1},
                                {remove_bias,1},
                                {mutate_af,1},
                                {add_outlink,4},
                                {add_inlink,4},
                                {add_neuron,4},
                                {outsplice,4},
                                {add_sensor,1},
                                {add_actuator,1},
                                {mutate_plasticity_parameters,4},
                                {add_cpp,4},
                                {add_cep,4}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}, {ncount_linear, 0.5}],
                       population_evo_alg_f => generational,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }
    }]}
  ]}

].

=== ./config/dpb_w_damping.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, []},
    {runs, 50},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, false},
    {population_mgr_efficiency, 1},
    {interactive_selection, false},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{ op_modes => [gt, validation],
             population_id => dpb_benchmark_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 10,
             generation_limit => 100,
             evaluations_limit => 10000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => dpb_w_damping,
                       connection_architecture => feedforward,
                       agent_encoding_types => [neural],
                       substrate_plasticities => [none],
                       substrate_linkforms => [l2l_feedforward],
                       neural_afs => [tanh],
                       neural_pfns => [hebbian],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                                {mutate_weights,1},
                                {add_bias,1},
                                {remove_bias,1},
                                {mutate_af,1},
                                {add_outlink,4},
                                {add_inlink,4},
                                {add_neuron,4},
                                {outsplice,4},
                                {add_sensor,1},
                                {add_actuator,1},
                                {add_sensorlink,1},
                                {add_actuatorlink,1},
                                {mutate_plasticity_parameters,4},
                                {add_cpp,1},
                                {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => generational,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }
    }]}
  ]}

].

=== ./config/flatland_all.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, [1.0, 1.0, 1000.0, 1000.0, flatland]},
    {runs, 1},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, true},
    {population_mgr_efficiency, 1},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{op_modes => [gt],
             population_id => flatland_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 20,
             generation_limit => 100,
             evaluations_limit => 25000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => prey,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural, substrate],
                       substrate_plasticities => [none, iterative, abcn],
                       substrate_linkforms => [l2l_feedforward, jordan_recurrent, fully_connected, fully_interconnected, neuronself_recurrent],
                       neural_afs => [tanh, relu, cos, gaussian, absolute, sin, sqrt, sigmoid],
                       neural_pfns => [none, hebbian_w, hebbian, ojas_w, ojas, self_modulation_v1, self_modulation_v2, self_modulation_v2, self_modulation_v3, self_modulation_v4, self_modulation_v5, self_modulation_v6, neuromodulation],
                       neural_aggr_fs => [dot_product, diff_product, mult_product],
                       tuning_selection_fs => [all, all_random, dynamic, dynamic_random, active, active_random, current, current_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian, lamarckian],
                       mutation_operators => [
                         {mutate_weights, 1},
                         {add_bias,1},
                         {remove_bias,1},
                         {mutate_af,1},
                         {add_outlink,4},
                         {add_inlink,4},
                         {add_neuron,4},
                         {outsplice,4},
                         {add_sensor,1},
                         {add_actuator,1},
                         {add_sensorlink,1},
                         {add_actuatorlink,1},
                         {mutate_plasticity_parameters,4},
                         {add_cpp,1},
                         {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}, {ncount_linear, 0.5}],
                       population_evo_alg_f => steady_state,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }},
                    #{data => #{ morphology => predator,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural, substrate],
                       substrate_plasticities => [none, iterative, abcn],
                       substrate_linkforms => [l2l_feedforward, jordan_recurrent, fully_connected, fully_interconnected, neuronself_recurrent],
                       neural_afs => [tanh, relu, cos, gaussian, absolute, sin, sqrt, sigmoid],
                       neural_pfns => [none, hebbian_w, hebbian, ojas_w, ojas, self_modulation_v1, self_modulation_v2, self_modulation_v2, self_modulation_v3, self_modulation_v4, self_modulation_v5, self_modulation_v6, neuromodulation],
                       neural_aggr_fs => [dot_product, diff_product, mult_product],
                       tuning_selection_fs => [all, all_random, dynamic, dynamic_random, active, active_random, current, current_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian, lamarckian],
                       mutation_operators => [
                         {mutate_weights, 1},
                         {add_bias,1},
                         {remove_bias,1},
                         {mutate_af,1},
                         {add_outlink,4},
                         {add_inlink,4},
                         {add_neuron,4},
                         {outsplice,4},
                         {add_sensor,1},
                         {add_actuator,1},
                         {add_sensorlink,1},
                         {add_actuatorlink,1},
                         {mutate_plasticity_parameters,4},
                         {add_cpp,1},
                         {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}, {ncount_linear, 0.5}],
                       population_evo_alg_f => steady_state,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }}
    ]}
  ]}

].

=== ./config/vm.args ===
## Name of the node
-name apxr_run@127.0.0.1

## Cookie for distributed erlang
-setcookie apxr_run_cookie_xxxxxxxxx213123213213

## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
## (Disabled by default..use with caution!)
##-heart

## Enable kernel poll and a few async threads
##+K true
##+A 5

## Increase number of concurrent ports/sockets
##-env ERL_MAX_PORTS 4096

## Tweak GC to run more often
##-env ERL_FULLSWEEP_AFTER 10

# Enable SMP automatically based on availability
-smp auto

# Disable EPMD
-start_epmd false

=== ./config/fx.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, []},
    {runs, 10},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, false},
    {population_mgr_efficiency, 1},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{ op_modes => [gt, validation],
             population_id => fx_application_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 10,
             generation_limit => 100,
             evaluations_limit => 25000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => fx_morphology,
                       connection_architecture => recurrent,
                       agent_encoding_types => [substrate],
                       substrate_plasticities => [none],
                       substrate_linkforms => [jordan_recurrent],
                       neural_afs => [tanh, gaussian, sin, absolute, sgn, linear, log, sqrt],
                       neural_pfns => [ojas],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                                {mutate_weights,1},
                                {add_bias,1},
                                {remove_bias,1},
                                {mutate_af,1},
                                {add_outlink,1},
                                {add_inlink,1},
                                {add_neuron,1},
                                {outsplice,1},
                                {add_sensor,1},
                                {add_actuator,1},
                                {mutate_plasticity_parameters,1},
                                {add_cpp,1},
                                {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => generational,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }
    }]}
  ]}

].

=== ./config/sys.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, []},
    {runs, 20},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, false},
    {population_mgr_efficiency, 1},
    {interactive_selection, false},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{ op_modes => [gt, validation],
             population_id => dtm_benchmark_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 20,
             generation_limit => 100,
             evaluations_limit => 5000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => dtm_morphology,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural],
                       substrate_plasticities => [none],
                       substrate_linkforms => [l2l_feedforward],
                       neural_afs => [tanh],
                       neural_pfns => [ojas],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                                {mutate_weights,1},
                                {add_bias,1},
                                {remove_bias,1},
                                {mutate_af,1},
                                {add_outlink,4},
                                {add_inlink,4},
                                {add_neuron,4},
                                {outsplice,4},
                                {add_sensor,1},
                                {add_actuator,1},
                                {add_sensorlink,1},
                                {add_actuatorlink,1},
                                {mutate_plasticity_parameters,4},
                                {add_cpp,1},
                                {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => generational,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }
    }]}
  ]}
].

=== ./config/dtm.config ===
[
  {apxr_run, [
    {identifier, test},
    {build_tool, erlang},
    {public_scape, []},
    {runs, 20},
    {min_pimprovement, 0.0},
    {search_params_mut_prob, 0.5},
    {output_sat_limit, 1},
    {ro_signal, [0.0]},
    {fitness_stagnation, false},
    {population_mgr_efficiency, 1},
    {interactive_selection, false},
    {re_entry_probability, 0.0},
    {shof_ratio, 1},
    {selection_algorithm_efficiency, 1},
    {pmp, #{data => #{ op_modes => [gt, validation],
             population_id => dtm_benchmark_test,
             polis_id => mathema,
             survival_percentage => 0.5,
             init_specie_size => 10,
             specie_size_limit => 20,
             generation_limit => 100,
             evaluations_limit => 5000,
             fitness_goal => inf
           }}
    },

    {constraints, [
                    #{data => #{ morphology => dtm_morphology,
                       connection_architecture => recurrent,
                       agent_encoding_types => [neural],
                       substrate_plasticities => [none],
                       substrate_linkforms => [l2l_feedforward],
                       neural_afs => [tanh],
                       neural_pfns => [ojas],
                       neural_aggr_fs => [dot_product],
                       tuning_selection_fs => [dynamic_random],
                       tuning_duration_f => {wsize_proportional, 0.5},
                       annealing_parameters => [0.5],
                       perturbation_ranges => [1],
                       heredity_types => [darwinian],
                       mutation_operators => [
                                {mutate_weights,1},
                                {add_bias,1},
                                {remove_bias,1},
                                {mutate_af,1},
                                {add_outlink,4},
                                {add_inlink,4},
                                {add_neuron,4},
                                {outsplice,4},
                                {add_sensor,1},
                                {add_actuator,1},
                                {add_sensorlink,1},
                                {add_actuatorlink,1},
                                {mutate_plasticity_parameters,4},
                                {add_cpp,1},
                                {add_cep,1}
                       ],
                       tot_topological_mutations_fs => [{ncount_exponential, 0.5}],
                       population_evo_alg_f => generational,
                       population_selection_f => hof_competition,
                       specie_distinguishers => [tot_n],
                       hof_distinguishers => [tot_n]
                    }
    }]}
  ]}
].

